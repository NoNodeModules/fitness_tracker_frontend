{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateRoutineForm = ({\n  routineOpen,\n  routine\n}) => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n\n  if (routineOpen === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateRoutineForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updateeRoutine({\n            routineName,\n            routineGoal,\n            isPublic\n          });\n          alert('Your routine has been updated!'); //redirect/ refresh on click\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setRoutineName(e.target.value),\n          value: routineName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setRoutineGoal(e.target.value),\n          value: routineGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allow others to see? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: isPublic,\n          onClick: () => setIsPublic(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 58\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 20\n  }, this);\n};\n\n_s(UpdateRoutineForm, \"jN5lYfFLFIpXTla41uwoKSi5liY=\");\n\n_c = UpdateRoutineForm;\nexport default UpdateRoutineForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateRoutineForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/UpdateRoutineForm.js"],"names":["React","UpdateRoutineForm","routineOpen","routine","routines","setRoutines","useState","creator","setCreator","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","e","preventDefault","updateeRoutine","alert","target","value","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAA4B;AAAA;;AAElD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;;AAEJ,MAAGJ,WAAW,KAAK,IAAnB,EAAyB;AACrB,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAEa,CAAC,IAAI;AACnBA,UAAAA,CAAC,CAACC,cAAF;AACAC,UAAAA,cAAc,CAAC;AAACR,YAAAA,WAAD;AAAcE,YAAAA,WAAd;AAA2BE,YAAAA;AAA3B,WAAD,CAAd;AACAK,UAAAA,KAAK,CAAC,gCAAD,CAAL,CAHmB,CAInB;AAED,SAND;AAAA,gCAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,eAQE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,MAA3B;AAA4B,UAAA,QAAQ,EAAGH,CAAD,IAAOL,cAAc,CAACK,CAAC,CAACI,MAAF,CAASC,KAAV,CAA3D;AAA6E,UAAA,KAAK,EAAEX;AAApF;AAAA;AAAA;AAAA;AAAA,gBARF,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVA,eAWE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,MAA3B;AAA4B,UAAA,QAAQ,EAAGM,CAAD,IAAOH,cAAc,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAA3D;AAA6E,UAAA,KAAK,EAAET;AAApF;AAAA;AAAA;AAAA;AAAA,gBAXF,eAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbA,eAcE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,KAAK,EAAEE,QAA9B;AAAwC,UAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAdF,eAgBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAmBKV,QAAQ,GAAGA,QAAQ,CAACiB,GAAT,CAAa,CAAClB,OAAD,EAAUmB,KAAV,kBAAoB,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEf,OAAlB;AAA2B,QAAA,UAAU,EAAEC,UAAvC;AAA+D,QAAA,OAAO,EAAEL;AAAxE,SAAwDmB,KAAxD;AAAA;AAAA;AAAA;AAAA,cAAjC,CAAH,GAA4H,IAnBzI;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBE,GAvBN,MAuBY,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,CAhCD;;GAAMrB,iB;;KAAAA,iB;AAmCN,eAAeA,iBAAf","sourcesContent":["import React from 'react';\n\nconst UpdateRoutineForm = ({routineOpen, routine}) => {\n\n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n    \nif(routineOpen === true) {\n    return (\n        <div className='updateRoutineForm'>\n            <form onSubmit={e => {\n              e.preventDefault();\n              updateeRoutine({routineName, routineGoal, isPublic});\n              alert('Your routine has been updated!');\n              //redirect/ refresh on click\n\n            }} >\n            <label>Name: </label>\n              <input type='text' required onChange={(e) => setRoutineName(e.target.value)} value={routineName} >\n                </input>\n            <label>Goal: </label>\n              <input type='text' required onChange={(e) => setRoutineGoal(e.target.value)} value={routineGoal} >\n                </input>\n            <label>Allow others to see? </label>\n              <input type='checkbox' value={isPublic} onClick={() => setIsPublic(true)} >\n                </input>\n              <button type='submit'>Create Routine</button>\n            </form>\n            {routines ? routines.map((routine, index) => <Routine creator={creator} setCreator={setCreator} key={index} routine={routine} /> ) : null }\n         </div>\n    )} else return <div></div>;\n}\n\n\nexport default UpdateRoutineForm;"]},"metadata":{},"sourceType":"module"}