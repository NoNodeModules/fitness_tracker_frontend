{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Routines.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken } from '../api';\nimport Routine from './Routine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const createRoutine = async ({\n  routineName,\n  routineGoal,\n  isPublic\n}) => {\n  await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    },\n    body: JSON.stringify({\n      name: routineName,\n      goal: routineGoal,\n      isPublic: true\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};\nexport function MyRoutines(props) {\n  _s();\n\n  const {\n    creator\n  } = props;\n  const [currentUser, setCurrentUser] = useState('');\n  fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    }\n  }).then(response => response.json()).then(result => {\n    setCurrentUser(result.username);\n  }).catch(console.error);\n}\n\n_s(MyRoutines, \"b2F+G+MRA3q+0ak+tDAFmIjuX1s=\");\n\n_c = MyRoutines;\n\nconst Routines = () => {\n  _s2();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  useEffect(() => {\n    fetchRoutines().then(data => setRoutines(data));\n    console.log(routines);\n  }, []);\n\n  if (getCurrentToken()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"publicRoutines\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fitness Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          createRoutine({\n            routineName,\n            routineGoal,\n            isPublic\n          });\n          alert('Your post has been created!');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setRoutineName(e.target.value),\n          value: routineName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setRoutineGoal(e.target.value),\n          value: routineGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allow others to see? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: isPublic,\n          onClick: () => setIsPublic(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 58\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"publicRoutines\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fitness Routines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n      creator: creator,\n      setCreator: setCreator,\n      routine: routine\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 58\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Routines, \"jCZenzDRTqFuJSDhYY+fd0UEaTw=\");\n\n_c2 = Routines;\nexport default Routines;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyRoutines\");\n$RefreshReg$(_c2, \"Routines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Routines.js"],"names":["React","useEffect","useState","fetchRoutines","getCurrentToken","Routine","createRoutine","routineName","routineGoal","isPublic","fetch","method","headers","body","JSON","stringify","name","goal","then","response","json","result","console","log","catch","error","MyRoutines","props","creator","currentUser","setCurrentUser","username","Routines","routines","setRoutines","setCreator","setRoutineName","setRoutineGoal","setIsPublic","data","e","preventDefault","alert","target","value","map","routine","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchRoutines, getCurrentToken } from '../api';\nimport Routine from './Routine';\n\n\n\nexport const createRoutine = async ({routineName, routineGoal, isPublic}) => {\n    await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getCurrentToken()}`\n          },\n        body: JSON.stringify({\n            name: routineName,\n            goal: routineGoal,\n            isPublic: true\n      })\n    }).then(response => response.json())\n    .then(result => {\n        console.log(result);\n    })\n    .catch(console.error);\n}\n\n\nexport function MyRoutines(props) {\n    const {\n        creator,\n\n    } = props;\n\n    const [currentUser, setCurrentUser] = useState('');\n\n    fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${getCurrentToken()}`\n        },\n      }).then(response => response.json())\n        .then(result => {\n            setCurrentUser(result.username);\n    })\n    .catch(console.error);\n\n}\n\n\n\nconst Routines = () => {\n\n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n\n    useEffect(() => {\n        fetchRoutines()\n        .then((data) => setRoutines(data))\n        console.log(routines)\n    }, [])\n  \n    if(getCurrentToken()) {\n    return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n            <form onSubmit={e => {\n              e.preventDefault();\n              createRoutine({routineName, routineGoal, isPublic});\n              alert('Your post has been created!');\n\n            }} >\n            <label>Name: </label>\n              <input type='text' required onChange={(e) => setRoutineName(e.target.value)} value={routineName} >\n                </input>\n            <label>Goal: </label>\n              <input type='text' required onChange={(e) => setRoutineGoal(e.target.value)} value={routineGoal} >\n                </input>\n            <label>Allow others to see? </label>\n              <input type='checkbox' value={isPublic} onClick={() => setIsPublic(true)} >\n                </input>\n              <button type='submit'>Create Post</button>\n            </form>\n            {routines ? routines.map((routine, index) => <Routine creator={creator} setCreator={setCreator} key={index} routine={routine} /> ) : null }\n         </div>\n    )}\n    else return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n            {routines ? routines.map((routine, index) => <Routine creator={creator} setCreator={setCreator} key={index} routine={routine} /> ) : null }\n         </div>\n    )\n}\n\n\n\nexport default Routines;"]},"metadata":{},"sourceType":"module"}