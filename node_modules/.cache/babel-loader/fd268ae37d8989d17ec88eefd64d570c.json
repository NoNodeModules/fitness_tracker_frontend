{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/AddAnActivityForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchActivites } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAnActivityForm = ({\n  open,\n  setIsOpen,\n  routine\n}) => {\n  _s();\n\n  const addActivity = async ({\n    activity,\n    count,\n    duration\n  }) => {\n    fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}/activities`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        activity,\n        count,\n        duration\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const [activities, setActivities] = useState([]);\n  const [activity, setActivity] = useState('');\n  const [duration, setDuration] = useState('');\n  const [count, setCount] = useState('');\n  const [activityId, setActivityId] = useState('');\n\n  const closeForm = () => setIsOpen(false);\n\n  useEffect(() => {\n    fetchActivites().then(data => setActivities(data));\n  });\n\n  if (open === true) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addActivity({\n          activity,\n          count,\n          duration\n        });\n        alert('Your activity was added.');\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-activity\",\n        children: \"Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"activity\",\n        id: \"select-activity\",\n        value: activity,\n        onChange: event => {\n          setActivity(event.target.value);\n        },\n        children: activities.map((activity, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: activity.id,\n            children: activity.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Count\",\n        onChange: e => setCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Duration\",\n        onChange: e => setDuration(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeForm,\n        children: \"Hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 19\n  }, this);\n};\n\n_s(AddAnActivityForm, \"mXNvFY1uTLRjvr+dXqdZcp3CpQQ=\");\n\n_c = AddAnActivityForm;\nexport default AddAnActivityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAnActivityForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/AddAnActivityForm.js"],"names":["React","useState","useEffect","fetchActivites","AddAnActivityForm","open","setIsOpen","routine","addActivity","activity","count","duration","fetch","id","method","body","JSON","stringify","then","response","json","result","console","log","catch","error","activities","setActivities","setActivity","setDuration","setCount","activityId","setActivityId","closeForm","data","e","preventDefault","alert","event","target","value","map","idx","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchActivites } from '../api';\n\n\n\n\nconst AddAnActivityForm = ({open, setIsOpen, routine}) => {\n\n    const addActivity = async ({activity, count, duration}) => {\n        fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routine.id}/activities`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                activity,\n                count, \n                duration\n            })\n    }).then(response => response.json())\n      .then(result => {\n        console.log(result);\n      })\n      .catch(console.error);\n    }\n\n\n    const [activities, setActivities] = useState([]);\n    const [activity, setActivity] = useState('');\n    const [duration, setDuration] = useState('');\n    const [count, setCount] = useState('');\n    const [activityId, setActivityId] = useState('');\n\n\n    const closeForm = () => setIsOpen(false);\n\n    useEffect(() => {\n        fetchActivites()\n        .then((data) => setActivities(data))\n    })\n\n\n\n\nif(open === true) {\n        return (\n                <form onSubmit={e => {\n                    e.preventDefault();\n                    addActivity({activity, count, duration});\n                    alert('Your activity was added.');\n                }}>\n                <label htmlFor=\"select-activity\">Activity</label>\n                <select \n                    name=\"activity\" \n                    id=\"select-activity\"\n                    value={activity} \n                    onChange={event => {\n                        setActivity(event.target.value);\n                        }}>\n                    {activities.map((activity, idx) => { \n                        return <option key={idx} value={activity.id}>{activity.name}</option>\n                    })}\n                </select>\n                <input type='text' placeholder='Count' onChange={(e) => setCount(e.target.value)}></input>\n                <input type='text' placeholder='Duration' onChange={(e) => setDuration(e.target.value)}></input>\n                <button onClick={closeForm}>Hide</button>\n                <input type='submit'></input>\n            </form>\n        )\n    } else return <div></div>;\n}\n\nexport default AddAnActivityForm;"]},"metadata":{},"sourceType":"module"}