{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/Activities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchActivites, getCurrentToken } from '../api';\nimport Activity from './Activity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Activities = async () => {\n  _s();\n\n  const [activities, setActivities] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  useEffect(() => {\n    fetchActivites().then(data => setActivities(data));\n    console.log(routines);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"publicRoutines\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        createActivity({\n          activityName,\n          activityDescription\n        });\n        alert('Your post has been created!');\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: e => setActivityName(e.target.value),\n        value: activityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Goal: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: e => setActivityDescription(e.target.value),\n        value: activityDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Allow others to see? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: isPublic,\n        onClick: () => setIsPublic(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), activities ? activities.map((activity, index) => /*#__PURE__*/_jsxDEV(Activity, {\n      creator: creator,\n      setCreator: setCreator,\n      activity: activity\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 63\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Activities, \"/25eR/PTiA7mZtEZtOig+1UoVgM=\");\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/Activities.js"],"names":["React","useEffect","useState","fetchActivites","getCurrentToken","Activity","Activities","activities","setActivities","creator","setCreator","routineName","setRoutineName","routineGoal","setRoutineGoal","then","data","console","log","routines","e","preventDefault","createActivity","activityName","activityDescription","alert","setActivityName","target","value","setActivityDescription","isPublic","setIsPublic","map","activity","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,QAAhD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,UAAU,GAAG,YAAY;AAAA;;AAE3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,cAAc,GACbY,IADD,CACOC,IAAD,IAAUR,aAAa,CAACQ,IAAD,CAD7B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACnBA,QAAAA,CAAC,CAACC,cAAF;AACAC,QAAAA,cAAc,CAAC;AAACC,UAAAA,YAAD;AAAeC,UAAAA;AAAf,SAAD,CAAd;AACAC,QAAAA,KAAK,CAAC,6BAAD,CAAL;AAED,OALD;AAAA,8BAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAOE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,QAAQ,EAAGL,CAAD,IAAOM,eAAe,CAACN,CAAC,CAACO,MAAF,CAASC,KAAV,CAA5D;AAA8E,QAAA,KAAK,EAAEL;AAArF;AAAA;AAAA;AAAA;AAAA,cAPF,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA,eAUE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,QAAQ,EAAGH,CAAD,IAAOS,sBAAsB,CAACT,CAAC,CAACO,MAAF,CAASC,KAAV,CAAnE;AAAqF,QAAA,KAAK,EAAEJ;AAA5F;AAAA;AAAA;AAAA;AAAA,cAVF,eAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZA,eAaE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEM,QAA9B;AAAwC,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD;AAAlE;AAAA;AAAA;AAAA;AAAA,cAbF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAmBKxB,UAAU,GAAGA,UAAU,CAACyB,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,kBAAqB,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEzB,OAAnB;AAA4B,MAAA,UAAU,EAAEC,UAAxC;AAAgE,MAAA,QAAQ,EAAEuB;AAA1E,OAAyDC,KAAzD;AAAA;AAAA;AAAA;AAAA,YAApC,CAAH,GAAkI,IAnBjJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBE,CAnCN;;GAAM5B,U;;KAAAA,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchActivites, getCurrentToken } from '../api';\nimport Activity from './Activity';\n\nconst Activities = async () => {\n\n    const [activities, setActivities] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n\n    useEffect(() => {\n        fetchActivites()\n        .then((data) => setActivities(data))\n        console.log(routines)\n    }, [])\n\n    return (\n        <div className='publicRoutines'>\n            <h1>Activities</h1>\n            <form onSubmit={e => {\n              e.preventDefault();\n              createActivity({activityName, activityDescription});\n              alert('Your post has been created!');\n\n            }} >\n            <label>Name: </label>\n              <input type='text' required onChange={(e) => setActivityName(e.target.value)} value={activityName} >\n                </input>\n            <label>Goal: </label>\n              <input type='text' required onChange={(e) => setActivityDescription(e.target.value)} value={activityDescription} >\n                </input>\n            <label>Allow others to see? </label>\n              <input type='checkbox' value={isPublic} onClick={() => setIsPublic(true)} >\n                </input>\n              <button type='submit'>Create Activity</button>\n            </form>\n            {activities ? activities.map((activity, index) => <Activity creator={creator} setCreator={setCreator} key={index} activity={activity} /> ) : null }\n         </div>\n    )}\n\n\nexport default Activities;"]},"metadata":{},"sourceType":"module"}