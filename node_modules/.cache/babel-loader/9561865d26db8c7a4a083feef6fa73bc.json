{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines';\nimport { getCurrentToken } from '../api';\nimport Routine from './Routine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyRoutines = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [creator, setCreator] = useState('');\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n  const [currentUser, setCurrentUser] = useState('');\n  useEffect(() => {\n    fetchRoutines().then(data => setRoutines(data));\n    console.log(routines);\n  }, []);\n  fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getCurrentToken()}`\n    }\n  }).then(response => response.json()).then(result => {\n    setCurrentUser(result.username);\n  }).catch(console.error);\n  routines.map(routine => routine);\n\n  if (currentUser === routine.creatorName) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"publicRoutines\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fitness Routines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          createRoutine({\n            routineName,\n            routineGoal,\n            isPublic\n          });\n          alert('Your post has been created!'); //need to redirect to /myroutines\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setRoutineName(e.target.value),\n          value: routineName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Goal: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => setRoutineGoal(e.target.value),\n          value: routineGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Allow others to see? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: isPublic,\n          onClick: () => setIsPublic(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), routines ? routines.map((routine, index) => /*#__PURE__*/_jsxDEV(Routine, {\n        creator: creator,\n        setCreator: setCreator,\n        routine: routine\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 58\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(MyRoutines, \"oL3Ia2rI6XOzLEZFzdmPSU+RqJA=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/MyRoutines.js"],"names":["React","useEffect","useState","createRoutine","getCurrentToken","Routine","MyRoutines","routines","setRoutines","creator","setCreator","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","currentUser","setCurrentUser","fetchRoutines","then","data","console","log","fetch","headers","response","json","result","username","catch","error","map","routine","creatorName","e","preventDefault","alert","target","value","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { createRoutine } from './Routines'\nimport { getCurrentToken } from '../api';\nimport Routine from './Routine'\n\nconst MyRoutines = () => {\n\n    const [routines, setRoutines] = useState([]);\n    const [creator, setCreator] = useState('');\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false);\n    const [currentUser, setCurrentUser] = useState('');\n\n    useEffect(() => {\n        fetchRoutines()\n        .then((data) => setRoutines(data))\n        console.log(routines)\n    }, [])\n\n\n        fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${getCurrentToken()}`\n        },\n      }).then(response => response.json())\n        .then(result => {\n          setCurrentUser(result.username);\n        })\n        .catch(console.error);\n\n        routines.map((routine) => routine)\n\n    if(currentUser === routine.creatorName) {\n    return (\n        <div className='publicRoutines'>\n            <h1>Fitness Routines</h1>\n            <form onSubmit={e => {\n              e.preventDefault();\n              createRoutine({routineName, routineGoal, isPublic});\n              alert('Your post has been created!');\n                //need to redirect to /myroutines\n            }} >\n            <label>Name: </label>\n              <input type='text' required onChange={(e) => setRoutineName(e.target.value)} value={routineName} >\n                </input>\n            <label>Goal: </label>\n              <input type='text' required onChange={(e) => setRoutineGoal(e.target.value)} value={routineGoal} >\n                </input>\n            <label>Allow others to see? </label>\n              <input type='checkbox' value={isPublic} onClick={() => setIsPublic(true)} >\n                </input>\n              <button type='submit'>Create Post</button>\n            </form>\n            {routines ? routines.map((routine, index) => <Routine creator={creator} setCreator={setCreator} key={index} routine={routine} /> ) : null }\n         </div>\n    )}\n}\n\n\n\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}