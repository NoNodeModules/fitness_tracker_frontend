{"ast":null,"code":"var _jsxFileName = \"/home/tradcliffe/fitness_tracker/src/components/AddAnActivityForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchActivites } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddAnActivityForm = ({\n  open,\n  setIsOpen\n}) => {\n  _s();\n\n  const [activities, setActivities] = useState([]);\n  const [activity, setActivity] = useState('');\n  const [duration, setDuration] = useState('');\n  const [count, setCount] = useState('');\n  const [activityId, setActivityId] = useState('');\n\n  const closeForm = () => setIsOpen(false);\n\n  useEffect(() => {\n    fetchActivites().then(data => setActivities(data));\n  });\n  console.log(activityId);\n\n  if (open === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select-activity\",\n        children: \"Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"activity\",\n        id: \"select-activity\",\n        value: activity,\n        onChange: event => {\n          setActivity(event.target.value);\n          setActivityId(key);\n        },\n        children: activities.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Count\",\n        onChange: e => setCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Duration\",\n        onChange: e => setDuration(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeForm,\n        children: \"Hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 19\n  }, this);\n};\n\n_s(AddAnActivityForm, \"mXNvFY1uTLRjvr+dXqdZcp3CpQQ=\");\n\n_c = AddAnActivityForm;\nexport default AddAnActivityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAnActivityForm\");","map":{"version":3,"sources":["/home/tradcliffe/fitness_tracker/src/components/AddAnActivityForm.js"],"names":["React","useState","useEffect","fetchActivites","AddAnActivityForm","open","setIsOpen","activities","setActivities","activity","setActivity","duration","setDuration","count","setCount","activityId","setActivityId","closeForm","then","data","console","log","event","target","value","key","map","item","idx","name","id","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAuB;AAAA;;AAE7C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMgB,SAAS,GAAG,MAAMX,SAAS,CAAC,KAAD,CAAjC;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,cAAc,GACbe,IADD,CACOC,IAAD,IAAUX,aAAa,CAACW,IAAD,CAD7B;AAEH,GAHQ,CAAT;AAKJC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;;AAEA,MAAGV,IAAI,KAAK,IAAZ,EAAkB;AACV,wBACI;AAAA,8BACK;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,iBAFP;AAGI,QAAA,KAAK,EAAEI,QAHX;AAII,QAAA,QAAQ,EAAEa,KAAK,IAAI;AACfZ,UAAAA,WAAW,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACAR,UAAAA,aAAa,CAACS,GAAD,CAAb;AACC,SAPT;AAAA,kBAQKlB,UAAU,CAACmB,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3B,8BAAO;AAAsB,YAAA,KAAK,EAAED,IAAI,CAACE,IAAlC;AAAA,sBAAyCF,IAAI,CAACE;AAA9C,aAAaF,IAAI,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEH,SAHA;AARL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAeI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,QAAQ,EAAGC,CAAD,IAAOjB,QAAQ,CAACiB,CAAC,CAACR,MAAF,CAASC,KAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,QAAQ,EAAGO,CAAD,IAAOnB,WAAW,CAACmB,CAAC,CAACR,MAAF,CAASC,KAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAiBI;AAAQ,QAAA,OAAO,EAAEP,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH,GAvBL,MAuBW,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACV,CAzCD;;GAAMb,iB;;KAAAA,iB;AA2CN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchActivites } from '../api';\n\nconst AddAnActivityForm = ({open, setIsOpen}) => {\n\n    const [activities, setActivities] = useState([]);\n    const [activity, setActivity] = useState('');\n    const [duration, setDuration] = useState('');\n    const [count, setCount] = useState('');\n    const [activityId, setActivityId] = useState('');\n\n    const closeForm = () => setIsOpen(false);\n\n    useEffect(() => {\n        fetchActivites()\n        .then((data) => setActivities(data))\n    })\n\nconsole.log(activityId);\n\nif(open === true) {\n        return (\n            <div>\n                 <label htmlFor=\"select-activity\">Activity</label>\n                <select \n                    name=\"activity\" \n                    id=\"select-activity\"\n                    value={activity} \n                    onChange={event => {\n                        setActivity(event.target.value);\n                        setActivityId(key)\n                        }}>\n                    {activities.map((item, idx) => {\n                        return <option key={item.id} value={item.name}>{item.name}</option>\n                        \n                    })}\n                </select>\n                <input type='text' placeholder='Count' onChange={(e) => setCount(e.target.value)}></input>\n                <input type='text' placeholder='Duration' onChange={(e) => setDuration(e.target.value)}></input>\n                <button onClick={closeForm}>Hide</button>\n                <input type='submit'></input>\n            </div>\n        )\n    } else return <div></div>;\n}\n\nexport default AddAnActivityForm;"]},"metadata":{},"sourceType":"module"}